name: Build and Release

on:
  push:
    tags:
      - "v*.*.*"  # Trigger only on version tags
  workflow_dispatch:

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up dependencies (Linux/macOS)
        if: matrix.os != 'windows-latest'
        run: |
          if [[ ${{ matrix.os }} == "ubuntu-latest" ]]; then sudo apt-get install -y build-essential; fi
          if [[ ${{ matrix.os }} == "macos-latest" ]]; then brew install make gcc; fi

      - name: Set up dependencies (Windows)
        if: matrix.os == 'windows-latest'
        run: |
          choco install make -y
          choco install mingw -y
        shell: cmd

      - name: Build with Make
        run: |
          make
          mkdir -p dist
          if [[ ${{ matrix.os }} == "windows-latest" ]]; then mv bin/main.exe dist/; else mv bin/main dist/; fi

      - name: Archive Build Artifacts
        run: |
          if [[ ${{ matrix.os }} == "ubuntu-latest" ]]; then tar -czvf dist/linux-build.tar.gz dist/; fi
          if [[ ${{ matrix.os }} == "macos-latest" ]]; then tar -czvf dist/mac-build.tar.gz dist/; fi
          if [[ ${{ matrix.os }} == "windows-latest" ]]; then 7z a dist/windows-build.zip dist/*; fi

      - name: Upload Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.os }}-build
          path: dist/
