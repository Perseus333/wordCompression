name: Build and Release

on:
  push:
    tags:
      - "v*.*.*"  # Trigger only on version tags
  workflow_dispatch:

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up dependencies (Linux/macOS)
        if: matrix.os != 'windows-latest'
        run: |
          if [[ ${{ matrix.os }} == "ubuntu-latest" ]]; then sudo apt-get install -y build-essential; fi
          if [[ ${{ matrix.os }} == "macos-latest" ]]; then brew install make gcc; fi

      - name: Set up dependencies (Windows)
        if: matrix.os == 'windows-latest'
        run: |
          choco install make -y
          choco install mingw -y --ignore-checksums --no-progress
        shell: cmd

      - name: Build with Make
        run: |
          make
          mkdir -p dist
          if ($env:matrix_os -eq "windows-latest") {
            mv bin\main.exe dist\
          } else {
            mv bin/main dist/
          }
        shell: pwsh

      - name: List files before archiving (for debugging)
        run: ls -l dist/

      - name: Ensure files are stable before archiving
        run: |
          sleep 2  # Increase the wait time to ensure files are stable

      - name: Archive Build Artifacts
        run: |
          # Archive based on the OS
          if [[ ${{ matrix.os }} == "ubuntu-latest" ]]; then
            zip -r dist/linux-build.zip dist/  # Changed tar to zip for stability
          fi
          if [[ ${{ matrix.os }} == "macos-latest" ]]; then
            zip -r dist/mac-build.zip dist/  # Changed tar to zip for stability
          fi
          if [ ${{ matrix.os }} == "windows-latest" ]; then
            7z a dist/windows-build.zip dist/*  # Windows: using 7z
          fi

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.os }}-build
          path: dist/
